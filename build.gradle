buildscript {
    repositories {
        maven {
            url = 'https://files.minecraftforge.net/maven' }
        maven {url = 'https://plugins.gradle.org/m2' }
        maven {
            name 'CB Maven'
            url "http://chickenbones.net/maven/"
        }
        maven {
            name = "CoFH Maven"
            url = "http://maven.covers1624.net"
        }
        maven {
            url = "https://www.cursemaven.com"
        }
        maven {
            // Licenser
            url "https://plugins.gradle.org/m2/"
        }
        //maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        //classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath 'de.undercouch:gradle-download-task:3.4.3'}
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'

// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'de.undercouch.download'

version = '1.12.2-1.0.0'
group = 'com.vicious.viciouscore' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'viciouscore'

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.


minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    //coreMod = 'com.drathonix.nertweaks.NERTweaksLoadingPlugin'
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    //1.12_snapshot_20171003
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven {
        // RebornCore, TR
        name = "Modmuss50"
        url = "http://maven.modmuss50.me/"
    }
    maven {
        // JEI
        name "JEI"
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven { // IC2 repo
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name = "ViciousLib"
        url = uri("https://maven.pkg.github.com/Vicious-MCModding/ViciousLib")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GPR_USER")
            password = project.findProperty("gpr.key") ?: System.getenv("GPR_API_KEY")
        }
    }
}
dependencies {
    deobfProvided "net.industrial-craft:industrialcraft-2:2.8.178-ex112:api" // IC2 Api
    compile "com.vicious:viciouslib:1.5.1"
    compile "org.json:json:20171018"
    compileOnly (fileTree(dir: 'lib', include: ['*.jar']))
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "viciouscore",
            "Specification-Vendor": "vicious",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"vicious",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

publishing {
    repositories {
        maven {
            name = "ViciousLib"
            url = uri("https://maven.pkg.github.com/Vicious-MCModding/ViciousCore")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GPR_USER")
                password = project.findProperty("gpr.key") ?: System.getenv("GPR_API_KEY")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId = 'com.vicious'
            artifactId = 'viciouscore'
            version = "1.5.1"
            from components.java
        }
    }
}
